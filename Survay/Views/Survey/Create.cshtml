@model Survay.DTOs.surveyDTO

@{
    ViewData["Title"] = "Create Survey";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h2 class="h4 mb-0"><i class="bi bi-clipboard-plus me-2"></i>Create New Survey</h2>
                </div>

                <form asp-action="SubmitSurvey" asp-controller="Survey" method="post" class="card-body">
                    <div class="mb-4">
                        <label asp-for="Title" class="form-label fw-bold">Survey Title</label>
                        <input type="text" asp-for="Title" class="form-control" required>
                        <div class="form-text">Enter a clear, descriptive title for your survey</div>
                    </div>

                    <div class="mb-4">
                        <label asp-for="Description" class="form-label fw-bold">Survey Description</label>
                        <textarea asp-for="Description" class="form-control" rows="3" required></textarea>
                        <div class="form-text">Provide some context about what this survey is for</div>
                    </div>

                    <div id="questions">
                        <div class="card mb-3 question">
                            <div class="card-body">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Question Text</label>
                                    <input type="text" name="Questions[0].QuestionText" class="form-control" required>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label fw-bold">Question Type</label>
                                    <select name="Questions[0].QuestionType" class="form-select question-type" onchange="toggleQuestionInput(this)">
                                        <option value="MCQ">Multiple Choice (MCQ)</option>
                                        <option value="Essay">Essay</option>
                                    </select>
                                </div>

                                <div class="choices mb-3">
                                    <label class="form-label fw-bold">Choices</label>
                                    <div class="input-group mb-2 choice">
                                        <input type="text" name="Questions[0].ChoseDTOs[0].Text" class="form-control" required>
                                        <button type="button" class="btn btn-danger" onclick="removeChoice(this)">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </div>

                                <div class="d-flex gap-2">
                                    <button type="button" class="btn btn-primary add-choice-btn" onclick="addChoice(this)">
                                        <i class="bi bi-plus-circle me-1"></i> Add Choice
                                    </button>
                                    <button type="button" class="btn btn-outline-danger" onclick="removeQuestion(this)">
                                        <i class="bi bi-trash me-1"></i> Remove Question
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between mt-4">
                        <button type="button" class="btn btn-success" onclick="addQuestion()">
                            <i class="bi bi-plus-lg me-1"></i> Add Question
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-save me-1"></i> Submit Survey
                        </button>
                    </div>
              
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">

<script>
    let questionIndex = 1;
    let choiceIndices = [1]; // Track choice indices for each question

    function addQuestion() {
        let questionsDiv = document.getElementById("questions");
        let newQuestion = document.createElement("div");
        newQuestion.className = "card mb-3 question";
        newQuestion.innerHTML = `
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label fw-bold">Question Text</label>
                        <input type="text" name="Questions[${questionIndex}].QuestionText" class="form-control" required>
                    </div>

                    <div class="mb-3">
                        <label class="form-label fw-bold">Question Type</label>
                        <select name="Questions[${questionIndex}].QuestionType" class="form-select question-type" onchange="toggleQuestionInput(this)">
                            <option value="MCQ">Multiple Choice (MCQ)</option>
                            <option value="Essay">Essay</option>
                        </select>
                    </div>

                    <div class="choices mb-3">
                        <label class="form-label fw-bold">Choices</label>
                        <div class="input-group mb-2 choice">
                            <input type="text" name="Questions[${questionIndex}].ChoseDTOs[0].Text" class="form-control" required>
                            <button type="button" class="btn btn-danger" onclick="removeChoice(this)">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </div>

                    <div class="d-flex gap-2">
                        <button type="button" class="btn btn-primary add-choice-btn" onclick="addChoice(this)">
                            <i class="bi bi-plus-circle me-1"></i> Add Choice
                        </button>
                        <button type="button" class="btn btn-outline-danger" onclick="removeQuestion(this)">
                            <i class="bi bi-trash me-1"></i> Remove Question
                        </button>
                    </div>
                </div>
            `;
        questionsDiv.appendChild(newQuestion);
        choiceIndices[questionIndex] = 1; // Initialize choice index for this question
        questionIndex++;
    }

    function addChoice(button) {
        let questionDiv = button.closest(".question");
        let choicesDiv = questionDiv.querySelector(".choices");
        let questionNumber = Array.from(questionDiv.parentElement.children).indexOf(questionDiv);
        let choiceIndex = choicesDiv.querySelectorAll(".choice").length;

        let newChoice = document.createElement("div");
        newChoice.className = "input-group mb-2 choice";
        newChoice.innerHTML = `
                <input type="text" name="Questions[${questionNumber}].ChoseDTOs[${choiceIndex}].Text" class="form-control" required>
                <button type="button" class="btn btn-danger" onclick="removeChoice(this)">
                    <i class="bi bi-trash"></i>
                </button>
            `;
        choicesDiv.appendChild(newChoice);
    }

    function removeChoice(button) {
        let choiceDiv = button.closest(".choice");
        if (choiceDiv && choiceDiv.parentElement.querySelectorAll(".choice").length > 1) {
            choiceDiv.remove();
        } else {
            alert("Each question must have at least one choice");
        }
    }

    function removeQuestion(button) {
        if (document.querySelectorAll(".question").length > 1) {
            button.closest(".question").remove();
            // Reindex remaining questions
            let questions = document.querySelectorAll(".question");
            questions.forEach((question, index) => {
                question.querySelectorAll("[name^='Questions']").forEach(el => {
                    el.name = el.name.replace(/Questions\[\d+\]/g, `Questions[${index}]`);
                });
            });
            questionIndex = questions.length;
        } else {
            alert("Survey must have at least one question");
        }
    }

    function toggleQuestionInput(selectElement) {
        let questionDiv = selectElement.closest(".question");
        let choicesDiv = questionDiv.querySelector(".choices");
        let addChoiceBtn = questionDiv.querySelector(".add-choice-btn");

        if (selectElement.value === "Essay") {
            choicesDiv.style.display = "none";
            addChoiceBtn.style.display = "none";

            // Clear existing choices except the first one
            let choices = choicesDiv.querySelectorAll(".choice");
            for (let i = 1; i < choices.length; i++) {
                choices[i].remove();
            }
        } else {
            choicesDiv.style.display = "block";
            addChoiceBtn.style.display = "block";
        }
    }
</script>