
<p>Total Responce:@ViewBag.totalresponce</p>

<div id="chartsContainer"></div> <!-- Charts will be added dynamically -->



<style>

    .essay-responses {
        list-style-type: none;
        padding: 10px;
        background: #f8f8f8;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .essay-responses li {
            padding: 8px;
            border-bottom: 1px solid #ddd;
        }

            .essay-responses li:last-child {
                border-bottom: none;
            }
    /* Page Styling */
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        padding: 0;
        text-align: center;
    }

    /* Title */
    h1 {
        margin-top: 20px;
        color: #333;
    }

    /* Container for Charts */
    #chartsContainer {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
        max-width: 800px;
        margin: 20px auto;
    }

    /* Individual Chart Wrappers */
    .chart-wrapper {
        background: white;
        padding: 15px;
        border-radius: 8px;
        box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 700px;
    }

    h3 {
        font-size: 18px;
        color: #444;
        text-align: center;
        margin-bottom: 10px;
    }

    canvas {
        max-width: 100%;
        height: 250px !important;
    }
</style>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var surveyId = @ViewBag.SurveyId; // Razor injects the value directly into JavaScript
    document.addEventListener("DOMContentLoaded", function () {
        fetch(`/Analyze/GetSurveyResults?surveyId=` + surveyId)
            .then(response => response.json())
            .then(data => {
                let container = document.getElementById("chartsContainer");

                data.forEach((survey, index) => {
                    let chartDiv = document.createElement("div");
                    chartDiv.classList.add("chart-wrapper");
                    chartDiv.innerHTML = `<h3>${survey.question}</h3>`;

                    if (survey.isMCQ) {
                        // MCQ → Use Chart.js Bar Chart
                        let canvasId = "chart" + index;
                        chartDiv.innerHTML += `<canvas id="${canvasId}"></canvas>`;
                        container.appendChild(chartDiv);

                        let labels = survey.choices.map(c => c.choice);
                        let counts = survey.choices.map(c => c.count);
                        let colors = ["#00C853", "#1976D2", "#FFC107", "#26C6DA", "#FF7043"];

                        let ctx = document.getElementById(canvasId).getContext("2d");

                        new Chart(ctx, {
                            type: "bar",
                            data: {
                                labels: labels,
                                datasets: [{
                                    label: "Responses",
                                    data: counts,
                                    backgroundColor: colors.slice(0, labels.length),
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                scales: {
                                    y: {
                                        beginAtZero: true,
                                        max: 100, // ✅ Set max value to 100
                                        ticks: { font: { size: 14 } }
                                    },
                                    x: { ticks: { font: { size: 14 } } }
                                },
                                plugins: { legend: { display: false } }
                            }
                        });
                    } else {
                        // Essay → Display Responses as Text
                        let responseList = document.createElement("ul");
                        responseList.classList.add("essay-responses");

                        survey.response.forEach(response => {
                            let li = document.createElement("li");
                            li.textContent = response; // Direct response text
                            responseList.appendChild(li);
                        });

                        chartDiv.appendChild(responseList);
                        container.appendChild(chartDiv);
                    }
                });
            })
            .catch(error => console.error("Error fetching survey data:", error));
    });

</script>
